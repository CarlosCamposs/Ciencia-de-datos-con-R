tinytex::install_tinytex()
library(nycflights13)
library(tidyverse)
library(knitr)
library(moderndive)
library(scales) # Sirve para escalas temporales (eje x)
library(zoo)
# ------------------------------------------------------------------------------
ggplot()+
geom_point(data=weather,mapping = aes(x=temp),y=0,alpha=0.01)+
ylim(c(-0.25,0.25))+
scale_x_continuous(breaks=seq(0,100,10))
# ------------------------------------------------------------------------------
ggplot()+
geom_point(data=weather,mapping = aes(x=temp),y=0)+
ylim(c(-0.25,0.25))+
scale_x_continuous(breaks=seq(0,100,10))
# ------------------------------------------------------------------------------
ggplot()+
geom_point(data=weather,mapping = aes(x=temp),
y=0,size=2)+
ylim(c(-0.25,0.25))+
scale_x_continuous(breaks=seq(0,100,10))
# ------------------------------------------------------------------------------
ggplot()+
geom_point(data=weather,mapping = aes(x=temp),
y=0,size=5)+
ylim(c(-0.25,0.25))+
scale_x_continuous(breaks=seq(0,100,10))
# ------------------------------------------------------------------------------
ggplot()+
geom_point(data=weather,mapping = aes(x=temp),
y=0,size=5,alpha=0.1)+
ylim(c(-0.25,0.25))+
scale_x_continuous(breaks=seq(0,100,10))
# ------------------------------------------------------------------------------
# Histogramas
ggplot()+
geom_histogram(data=weather,mapping=aes(x=temp))
# ------------------------------------------------------------------------------
# Histogramas
ggplot()+
geom_histogram(data = weather,mapping = aes(x = temp),
color = "white")
# ------------------------------------------------------------------------------
# Histogramas
ggplot()+
geom_histogram(data = weather,mapping = aes(x = temp),
color = "red")
# ------------------------------------------------------------------------------
# Histogramas
ggplot()+
geom_histogram(data = weather,mapping = aes(x = temp),
color = "blue", fill="green")
# ------------------------------------------------------------------------------
# Histogramas
ggplot()+
geom_histogram(data = weather,mapping = aes(x = temp),
color = "green", fill="blue")
# ------------------------------------------------------------------------------
# Histogramas
ggplot()+
geom_histogram(data = weather,mapping = aes(x = temp),
color = "green", fill="cyan")
# ------------------------------------------------------------------------------
# Histogramas
ggplot()+
geom_histogram(data = weather,mapping = aes(x = temp),
color = "green", fill="steelblue")
# ------------------------------------------------------------------------------
# Histogramas
ggplot()+
geom_histogram(data = weather,mapping = aes(x = temp),
color = "green", fill="steelblue",
bins=10)
ggplot() +
geom_histogram(data = weather,
mapping = aes(x=temp,y=..density..),
color = "white",
bins = 16)
# ------------------------------------------------------------------------------
ggplot() +
geom_histogram(data = weather,
mapping = aes(x=temp,y=..count../sum(..count..)),
color = "white",
bins = 20) +
scale_y_continuous(labels = scales::percent)
# ------------------------------------------------------------------------------
ggplot() +
geom_density(data = weather,
mapping = aes(x=temp,y=..count../sum(..count..)),
color = "black") +
scale_y_continuous(labels = scales::percent)
ggplot() +
geom_histogram(data = weather,
mapping = aes(x=temp,y=..density..),
color = "white",
bins = 16)+
geom_density(data = weather,
mapping = aes(x=temp,y=..count../sum(..count..)),
color = "black") +
# 1. En la estetica "y" se pone "density" para realizar el histograma
#    como comunmente se conoce
# 2. El valor de la ordenada y se multiplica por 1000 para obtener
#    el valor de la fraccion
# ------------------------------------------------------------------------------
ggplot() +
geom_histogram(data = weather,
mapping = aes(x=temp,y=..count../sum(..count..)),
color = "white",
bins = 20) +
scale_y_continuous(labels = scales::percent)
ggplot() +
geom_histogram(data = weather,
mapping = aes(x=temp,y=..density..),
color = "white",
bins = 16)
# ------------------------------------------------------------------------------
ggplot() +
geom_density(data = weather,
mapping = aes(x=temp,y=..count../sum(..count..)),
color = "black") +
scale_y_continuous(labels = scales::percent)
# ------------------------------------------------------------------------------
ggplot() +
geom_histogram(data = weather,
mapping = aes(x=temp,y=..density..),
color = "white",
bins = 10) +
geom_density(data = weather,
mapping = aes(x=temp),
color = "black",
fill = "yellow",
alpha = 0.5)
sismos <- read.csv("sismos.csv")
##########
# Cargamos los datos
setwd("C:/Users/Carlos Daniel/Desktop/GitHub/Ciencia-de-datos-con-R/datasets")
sismos <- read.csv("sismos.csv")
names(sismos)
ggplot()+
geom_density(data=sismos,mapping=aes(x=Magnitud),
fill="yellow")
ggplot()+
geom_density(data=sismos,mapping=aes(x=Magnitud,fill=entidades),alpha=0.1)
ggplot()+
geom_density(data=sismos,mapping=aes(x=Magnitud,fill=entidad),alpha=0.1)
ggplot()+
geom_density(data=sismos,mapping=aes(x=Magnitud,fill=entidad),alpha=0.5)
mis_entidades <- c("OAX","BC","CHIS","GRO")
# Estos son los datos para algunas entidades (las definidias arriba)
ggplot()+
geom_density(data=sismos_entidades,mapping=aes(x=Magnitud,fill=entidad),alpha=0.5)
mis_entidades = c("OAX","BC","CHIS","GRO")
sismos_entidades = sismos %>% filter(entidad %in% mis_entidades)
# Estos son los datos para algunas entidades (las definidias arriba)
ggplot()+
geom_density(data=sismos_entidades,mapping=aes(x=Magnitud,fill=entidad),alpha=0.5)
