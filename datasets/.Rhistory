install.packages(nycflights13)
install.packages("nycflights13")
install.packages("tidyverse")
install.packages("knitr")
library(nycflights13)
library(tidyverse)
library(knitr)
View(flights)
##########
# Visualizamos la estructura de la tabla
glimpse(flights)
str(flights)
##########
#
kable(flights)
mi_df <- data.frame("col1"=c("a","b","c"),"col2"=1:2)
mi_df <- data.frame("col1"=c("a","b","c"),"col2"=c(1,2,3))
kable(mi_df)
##########
#
glimpse(airports)
# Se muestra la informacion de cada uno de los aeropuertos
View(airports)
##########
# Visualizamos otra tabla
glimpse(airports)
View(airports)
View(airports)
##########
# Para pegar columnas de tablas
identificador <- paste(airports$faa,airports$name,sep="-")
##########
# Para pegar columnas de tablas
identificador <- paste(airports$faa,airports$name,sep=" - ")
library(nycflights13)
library(tidyverse)
library(knitr)
library(moderndive)
library(scales)
library(zoo)
##########
# Cargamos los datos
setwd("C:/Users/Carlos Daniel/Desktop/GitHub/Ciencia-de-datos-con-R/datasets")
# Para listar los archivos que tenemos en el wd
dir()
sismos <- read.csv("sismos.csv")
magnitud_promedio <- mean(sismos$Magnitud)
View(sismos)
sismos_enero <- sismos %>% filter(mes==1)
##########
# Cargamos los datos
setwd("C:/Users/Carlos Daniel/Desktop/GitHub/Ciencia-de-datos-con-R/datasets")
View(weather)
resumen_temp <- weather %>%
summarize(media=mean(temp,na.rm=T),
desviacion=sd(temp,na.rm=T))
resumen_temp
# Para no prender el na.rm=T pudimos haber realizado esto
weather %>%
filter(!( temp=c(NA) )) %>%
summarize(mean(temp))
weather %>%
filter(!( temp=c(NA) )) %>%
summarize(mean(temp))
tabla_prueba <- weather %>%
filter(temp %in% c(NA))
View(tabla_prueba)
weather %>%
filter(temp %in% c(NA)) %>%
summarize(num_rows=n())
# ------------------------------------------------------------------------------
# Para saber los valores unicos de alguna columna
unique(weather$origin)
weather %>%
filter(origin=="JFK") %>%
summarize(temp_minima=min(temp,na.rm=T), temp_maximo=max(temp,na.rm=T))
weather %>%
filter(origin=="EWR") %>%
summarize(temp_minima=min(temp,na.rm=T), temp_maximo=max(temp,na.rm=T))
weather %>%
filter(origin=="LGA") %>%
summarize(temp_minima=min(temp,na.rm=T), temp_maximo=max(temp,na.rm=T))
tabla_prueba <- weather %>%
group_by(month) # Con esta columna hara los grupos
View(tabla_prueba)
weather %>%
group_by(month) %>%
summarise(media=mean(temp,na.rm=T))
ejercicio <- weather %>%
filter(hour>=8,hour<=20) %>%  # Hasta aqui incluimos desde 8am y 8pm
group_by(day,month) %>%
summarise(temp_media=mean(temp,na.rm=T)) %>%
arrange(month) %>%
ungroup()
# ------------------------------------------------------------------------------
mis_medidas = weather %>%
filter(hour >=8, hour <=20) %>%
group_by(month,day) %>%
summarize(temp_media = mean(temp,na.rm=TRUE)) %>%
arrange(month) %>%
ungroup() %>%
mutate(month_description = factor(month,labels = month.name))
mis_medidas
# ------------------------------------------------------------------------------
resumen_mensual <-  weather %>%
group_by(month)
resumen_mensual_temperaturas <- weather %>%
group_by(month) %>%
summarize(mean = mean(temp, na.rm = TRUE),
std_dev = sd(temp, na.rm = TRUE))
# Visualizamos la tabla
resumen_mensual_temperaturas
View(diamonds)
diamonds %>%
group_by(cut) %>%
summarize(avg_price=mean(price))
flights %>%
group_by(origin) %>%
summarise(total_de_vuelos=n())
flights %>%
group_by(origin,month) %>%
summarize(total = n()) %>% # No desagrupamos y volvemos a pedir un summarise()
summarize(media=mean(total))
View(flights)
flights %>%
group_by(origin,month) %>%
summarize(total = n())
flights %>%
group_by(origin,month) %>%
summarize(total = n()) %>% # No desagrupamos y volvemos a pedir un summarise()
summarize(media=mean(total))
names(weather)
View(weather)
weather %>%
mutate(temperatura_en_C=(temp-32)/1.8)
weather <- weather %>%
mutate(temperatura_en_C=(temp-32)/1.8)
View(weather)
resumen_mensual_temperaturas <- weather %>%
group_by(month) %>%
summarize(mean_temp_in_F = mean(temp, na.rm = TRUE),
mean_temp_in_C = mean(temp_in_C, na.rm = TRUE))
resumen_mensual_temperaturas
resumen_mensual_temperaturas <- weather %>%
group_by(month) %>%
summarize(mean_temp_in_F = mean(temp, na.rm = TRUE),
mean_temp_in_C = mean(temp_in_C, na.rm = TRUE))
resumen_mensual_temperaturas
flights <- flights %>%
mutate(
gain = dep_delay - arr_delay,
hours = air_time / 60,
gain_per_hour = gain / hours)
flights
flights <- flights %>%
mutate(
gain = dep_delay - arr_delay,
hours = air_time / 60,
gain_per_hour = gain / hours)
flights
flights %>% names()
flights %>% group_by(dest) %>%
summarise(total_de_vuelos=n())
### Continuacion
flights %>% group_by(dest) %>%
summarise(total_de_vuelos=n()) %>%
arrange(total_de_vuelos)
View(airlines)
inner_join(flights,airlines) %>% View()
flights %>% inner_join(airports,
by = c("dest"="faa")) %>% View()
View(aiports)
View(airports)
##### Podemos resringir que informacion queremos llevar
flights %>% inner_join(airports[,c("faa","name")],
by = c("dest"="faa")) %>% View()
named_dests <- flights %>%
group_by(dest) %>%
summarize(num_flights = n()) %>%
inner_join(airports, by = c("dest" = "faa")) %>%
rename(airport_name = name) #a la columna "name" llamala "airport_name"
named_dests %>%  View()
flights %>%
group_by(dest) %>%
summarize(num_flights = n())
flights %>%
group_by(dest) %>%
summarize(num_flights = n()) %>%
inner_join(airports, by = c("dest" = "faa"))
flights %>%
group_by(dest) %>%
summarize(num_flights = n()) %>%
inner_join(airports, by = c("dest" = "faa")) %>%
rename(airport_name = name)
# ------------------------------------------------------------------------------
# Creando una "variable clave" artificial para hacer el inner_join
weather <- weather %>% mutate(Id=paste(year,
month,day,hour,
origin,sep="_"))
flights <- flights %>% mutate(Id=paste(year,
month,day,hour,
origin,sep="_"))
flights %>%
inner_join(weather,by=c("Id"="Id")) %>% View
flights %>%
select(carrier,flight)
flights %>% select(starts_with("a")) %>% names()
flights %>% select(ends_with("e")) %>% names()
flights %>% select(contains("time")) %>% names()
flights %>% select("departure_time"=dep_time,
"arrival_time"=arr_time) %>% names()
